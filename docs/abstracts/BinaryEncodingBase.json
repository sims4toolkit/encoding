{
  "$schema": "https://raw.githubusercontent.com/sims4toolkit/misc/main/json-schemas/docs-item-schema.json",
  "header": {
    "title": {
      "prefix": "abstract class",
      "name": "BinaryEncodingBase"
    },
    "description": "A base for classes that work with binary buffers.",
    "repoUrl": "https://github.com/sims4toolkit/encoding/blob/main/src/encoding.ts"
  },
  "sections": [
    {
      "title": "Methods",
      "content": [
        {
          "displayType": "function",
          "name": "getDecoder",
          "returnType": {
            "name": "BinaryDecoder",
            "path": {
              "pkg": "encoding",
              "group": "classes",
              "item": "BinaryDecoder"
            }
          },
          "description": "Returns a new BinaryDecoder for the buffer in this model."
        },
        {
          "displayType": "function",
          "name": "getEncoder",
          "returnType": {
            "name": "BinaryEncoder",
            "path": {
              "pkg": "encoding",
              "group": "classes",
              "item": "BinaryEncoder"
            }
          },
          "description": "Returns a new BinaryEncoder for the buffer in this model."
        },
        {
          "displayType": "function",
          "name": "isEOF",
          "returnType": {
            "name": "boolean"
          },
          "description": "Returns true if the offset is at the end of the file, false if it's not."
        },
        {
          "displayType": "function",
          "name": "savePos",
          "generics": [
            {
              "name": "T"
            }
          ],
          "returnType": {
            "name": "T"
          },
          "description": "Restores the offset to where it originally was after calling the given function. If the given function returns anything, it will be returned by this function.",
          "arguments": [
            {
              "name": "fn",
              "type": {
                "name": "() => T"
              },
              "description": "Function to call.",
              "optional": false
            }
          ],
          "examples": [
            {
              "code": "// offset = 0\nencoder.savePos(() => {\n  encoder.uint32();\n  // offset = 4\n});\n// offset = 0"
            }
          ]
        },
        {
          "displayType": "function",
          "name": "seek",
          "description": "Sets the offset to a specific position.",
          "arguments": [
            {
              "name": "offset",
              "type": {
                "name": "number | bigint"
              },
              "description": "Position to set the offset to.",
              "optional": false
            }
          ]
        },
        {
          "displayType": "function",
          "name": "skip",
          "returnType": {
            "name": "number"
          },
          "description": "Advances the offset by the given number of bytes, and returns the new offset.",
          "arguments": [
            {
              "name": "offset",
              "type": {
                "name": "number | bigint"
              },
              "description": "Number of bytes to skip.",
              "optional": false
            }
          ]
        },
        {
          "displayType": "function",
          "name": "tell",
          "returnType": {
            "name": "number"
          },
          "description": "Returns the current offset."
        }
      ]
    }
  ]
}